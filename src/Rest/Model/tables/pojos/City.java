/**
 * This class is generated by jOOQ
 */
package Rest.Model.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "city", schema = "vvv")
public class City implements Serializable {

	private static final long serialVersionUID = -1522360565;

	private Integer id;
	private String  name;
	private Double  latitute;
	private Double  longitude;

	public City() {}

	public City(City value) {
		this.id = value.id;
		this.name = value.name;
		this.latitute = value.latitute;
		this.longitude = value.longitude;
	}

	public City(
		Integer id,
		String  name,
		Double  latitute,
		Double  longitude
	) {
		this.id = id;
		this.name = name;
		this.latitute = latitute;
		this.longitude = longitude;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 255)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "latitute", precision = 12)
	public Double getLatitute() {
		return this.latitute;
	}

	public void setLatitute(Double latitute) {
		this.latitute = latitute;
	}

	@Column(name = "longitude", precision = 12)
	public Double getLongitude() {
		return this.longitude;
	}

	public void setLongitude(Double longitude) {
		this.longitude = longitude;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("City (");

		sb.append(id);
		sb.append(", ").append(name);
		sb.append(", ").append(latitute);
		sb.append(", ").append(longitude);

		sb.append(")");
		return sb.toString();
	}
}
