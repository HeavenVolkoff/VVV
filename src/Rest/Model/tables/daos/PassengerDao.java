/**
 * This class is generated by jOOQ
 */
package Rest.Model.tables.daos;


import Rest.Model.tables.Passenger;
import Rest.Model.tables.records.PassengerRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PassengerDao extends DAOImpl<PassengerRecord, Rest.Model.tables.pojos.Passenger, Integer> {

	/**
	 * Create a new PassengerDao without any configuration
	 */
	public PassengerDao() {
		super(Passenger.PASSENGER, Rest.Model.tables.pojos.Passenger.class);
	}

	/**
	 * Create a new PassengerDao with an attached configuration
	 */
	public PassengerDao(Configuration configuration) {
		super(Passenger.PASSENGER, Rest.Model.tables.pojos.Passenger.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(Rest.Model.tables.pojos.Passenger object) {
		return object.getUserId();
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<Rest.Model.tables.pojos.Passenger> fetchByUserId(Integer... values) {
		return fetch(Passenger.PASSENGER.USER_ID, values);
	}

	/**
	 * Fetch a unique record that has <code>user_id = value</code>
	 */
	public Rest.Model.tables.pojos.Passenger fetchOneByUserId(Integer value) {
		return fetchOne(Passenger.PASSENGER.USER_ID, value);
	}

	/**
	 * Fetch records that have <code>cpf IN (values)</code>
	 */
	public List<Rest.Model.tables.pojos.Passenger> fetchByCpf(String... values) {
		return fetch(Passenger.PASSENGER.CPF, values);
	}

	/**
	 * Fetch a unique record that has <code>cpf = value</code>
	 */
	public Rest.Model.tables.pojos.Passenger fetchOneByCpf(String value) {
		return fetchOne(Passenger.PASSENGER.CPF, value);
	}

	/**
	 * Fetch records that have <code>phone IN (values)</code>
	 */
	public List<Rest.Model.tables.pojos.Passenger> fetchByPhone(String... values) {
		return fetch(Passenger.PASSENGER.PHONE, values);
	}

	/**
	 * Fetch records that have <code>occupation IN (values)</code>
	 */
	public List<Rest.Model.tables.pojos.Passenger> fetchByOccupation(String... values) {
		return fetch(Passenger.PASSENGER.OCCUPATION, values);
	}

	/**
	 * Fetch records that have <code>address_id IN (values)</code>
	 */
	public List<Rest.Model.tables.pojos.Passenger> fetchByAddressId(Integer... values) {
		return fetch(Passenger.PASSENGER.ADDRESS_ID, values);
	}

	/**
	 * Fetch a unique record that has <code>address_id = value</code>
	 */
	public Rest.Model.tables.pojos.Passenger fetchOneByAddressId(Integer value) {
		return fetchOne(Passenger.PASSENGER.ADDRESS_ID, value);
	}
}
