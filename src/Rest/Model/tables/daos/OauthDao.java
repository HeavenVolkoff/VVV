/**
 * This class is generated by jOOQ
 */
package Rest.Model.tables.daos;


import Rest.Model.tables.Oauth;
import Rest.Model.tables.records.OauthRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthDao extends DAOImpl<OauthRecord, Rest.Model.tables.pojos.Oauth, Integer> {

	/**
	 * Create a new OauthDao without any configuration
	 */
	public OauthDao() {
		super(Oauth.OAUTH, Rest.Model.tables.pojos.Oauth.class);
	}

	/**
	 * Create a new OauthDao with an attached configuration
	 */
	public OauthDao(Configuration configuration) {
		super(Oauth.OAUTH, Rest.Model.tables.pojos.Oauth.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(Rest.Model.tables.pojos.Oauth object) {
		return object.getUserId();
	}

	/**
	 * Fetch records that have <code>token IN (values)</code>
	 */
	public List<Rest.Model.tables.pojos.Oauth> fetchByToken(byte[]... values) {
		return fetch(Oauth.OAUTH.TOKEN, values);
	}

	/**
	 * Fetch records that have <code>last_login_at IN (values)</code>
	 */
	public List<Rest.Model.tables.pojos.Oauth> fetchByLastLoginAt(Timestamp... values) {
		return fetch(Oauth.OAUTH.LAST_LOGIN_AT, values);
	}

	/**
	 * Fetch records that have <code>user_id IN (values)</code>
	 */
	public List<Rest.Model.tables.pojos.Oauth> fetchByUserId(Integer... values) {
		return fetch(Oauth.OAUTH.USER_ID, values);
	}

	/**
	 * Fetch a unique record that has <code>user_id = value</code>
	 */
	public Rest.Model.tables.pojos.Oauth fetchOneByUserId(Integer value) {
		return fetchOne(Oauth.OAUTH.USER_ID, value);
	}
}
