/**
 * This class is generated by jOOQ
 */
package Rest.Model.tables.records;


import Rest.Model.tables.Reservation;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "reservation", schema = "vvv")
public class ReservationRecord extends UpdatableRecordImpl<ReservationRecord> implements Record5<Integer, Timestamp, Byte, Double, Integer> {

	private static final long serialVersionUID = -816852696;

	/**
	 * Setter for <code>vvv.reservation.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>vvv.reservation.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>vvv.reservation.date</code>.
	 */
	public void setDate(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>vvv.reservation.date</code>.
	 */
	@Column(name = "date", nullable = false)
	public Timestamp getDate() {
		return (Timestamp) getValue(1);
	}

	/**
	 * Setter for <code>vvv.reservation.status</code>.
	 */
	public void setStatus(Byte value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>vvv.reservation.status</code>.
	 */
	@Column(name = "status", nullable = false, precision = 3)
	public Byte getStatus() {
		return (Byte) getValue(2);
	}

	/**
	 * Setter for <code>vvv.reservation.value</code>.
	 */
	public void setValue(Double value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>vvv.reservation.value</code>.
	 */
	@Column(name = "value", nullable = false, precision = 12)
	public Double getValue() {
		return (Double) getValue(3);
	}

	/**
	 * Setter for <code>vvv.reservation.passenger_user_id</code>.
	 */
	public void setPassengerUserId(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>vvv.reservation.passenger_user_id</code>.
	 */
	@Column(name = "passenger_user_id", nullable = false, precision = 10)
	public Integer getPassengerUserId() {
		return (Integer) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Timestamp, Byte, Double, Integer> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Timestamp, Byte, Double, Integer> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Reservation.RESERVATION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return Reservation.RESERVATION.DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field3() {
		return Reservation.RESERVATION.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field4() {
		return Reservation.RESERVATION.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return Reservation.RESERVATION.PASSENGER_USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value3() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value4() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getPassengerUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReservationRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReservationRecord value2(Timestamp value) {
		setDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReservationRecord value3(Byte value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReservationRecord value4(Double value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReservationRecord value5(Integer value) {
		setPassengerUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ReservationRecord values(Integer value1, Timestamp value2, Byte value3, Double value4, Integer value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ReservationRecord
	 */
	public ReservationRecord() {
		super(Reservation.RESERVATION);
	}

	/**
	 * Create a detached, initialised ReservationRecord
	 */
	public ReservationRecord(Integer id, Timestamp date, Byte status, Double value, Integer passengerUserId) {
		super(Reservation.RESERVATION);

		setValue(0, id);
		setValue(1, date);
		setValue(2, status);
		setValue(3, value);
		setValue(4, passengerUserId);
	}
}
