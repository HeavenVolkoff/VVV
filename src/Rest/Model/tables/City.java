/**
 * This class is generated by jOOQ
 */
package Rest.Model.tables;


import Rest.Model.Keys;
import Rest.Model.Vvv;
import Rest.Model.tables.records.CityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class City extends TableImpl<CityRecord> {

	private static final long serialVersionUID = 838313895;

	/**
	 * The reference instance of <code>vvv.city</code>
	 */
	public static final City CITY = new City();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CityRecord> getRecordType() {
		return CityRecord.class;
	}

	/**
	 * The column <code>vvv.city.id</code>.
	 */
	public final TableField<CityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>vvv.city.name</code>.
	 */
	public final TableField<CityRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>vvv.city.latitute</code>.
	 */
	public final TableField<CityRecord, Double> LATITUTE = createField("latitute", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>vvv.city.longitude</code>.
	 */
	public final TableField<CityRecord, Double> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * Create a <code>vvv.city</code> table reference
	 */
	public City() {
		this("city", null);
	}

	/**
	 * Create an aliased <code>vvv.city</code> table reference
	 */
	public City(String alias) {
		this(alias, CITY);
	}

	private City(String alias, Table<CityRecord> aliased) {
		this(alias, aliased, null);
	}

	private City(String alias, Table<CityRecord> aliased, Field<?>[] parameters) {
		super(alias, Vvv.VVV, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CityRecord> getPrimaryKey() {
		return Keys.KEY_CITY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CityRecord>> getKeys() {
		return Arrays.<UniqueKey<CityRecord>>asList(Keys.KEY_CITY_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public City as(String alias) {
		return new City(alias, this);
	}

	/**
	 * Rename this table
	 */
	public City rename(String name) {
		return new City(name, null);
	}
}
